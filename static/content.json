[{"name":"Documentation","description":"this is the info page","path":"/docs","text":"","wordCount":0,"type":"TOC"},{"name":"Information","description":"about Echo Speaks","path":"/docs/information","text":" Welcome to Echo Speaks\n\nEcho Speaks is a utilitarian smartapp and device handler that allows you to discover, select,\nand use the Amazon Alexa Devices directly in your Smart Home Environment. '''Echo Speaks''' give\nyou the ability to wake your Alexa devices remotely to speak any text that you wish for almost any\ngiven scenario.  Gone are the days of using expensive speakers connected to your hub. The day that\nyou have all been waiting for has arrived.\n\n|  | |\n|:----------|---------|\n|Category: | My Apps |\n|Author: | Anthony Santilli  |\n| Documentation: | Jason Headley and Anthony Santilli |\n\nSoftware - Current Release\n\nThe code for the SmartThings SmartApp is found on the GitHub site:\n\n| SmartApps: | Source Code URL: |\n|:-----------------|------------------------|\n| Echo Speaks: |Parent App |\n| Echo Speaks DTH: |Device Handler |\n","wordCount":122,"type":"Content"},{"name":"Get Started","description":"installation and configuration instructions","path":"/docs/installation","text":"","wordCount":0,"type":"TOC"},{"name":"Requirements","description":"what's needed to make this all work!","path":"/docs/installation/appRequirements","text":"The following are required for proper operation:\n\nAccounts\n\n SmartThings IDE Account access\n SmartThings account with active ST Hub (V1, V2 or V3)\n SmartThings mobile app installed on your mobile device\n During the setup process, you will be required to create a free HerokuApp account (Existing accounts will work as well)\n Amazon 2 Factor Authentication. - Not required (Unless it was enabled in the past), but it's HIGHLY recommended that you enable it for security.\n","wordCount":72,"type":"Content"},{"name":"Install Methods","description":"select an install method","path":"/docs/installation/appInstall","text":"","wordCount":0,"type":"TOC"},{"name":"Community Installer","description":"Automate the install","path":"/docs/installation/appInstall/autoInstall","text":"This is the simplest way to get Echo Speak Installed as well as other community apps\nStep 1:\n>Please visit here for instructions: SmartThings Community Installer)\nStep 2:\n>Continue to SmartApp Configuration\n>\n>Server Configuration","wordCount":29,"type":"Content"},{"name":"IDE (GitHub) Install","description":"use IDE integration","path":"/docs/installation/appInstall/githubInstall","text":"Code Install (GitHub Integration)\nEnabling the GitHub Integration in the IDE is by far the easiest way to install and get the latest updates for Echo Speak and Echo Speaks devices.\nStep 1:\n>To enable Git integration (one time configuration) under the IDE please visit here for instructions: IDE GitHub Integration Instructions\n>\n>NOTE: Git Integration is not currently available outside of US and UK\nStep 2:\n>Continue to SmartApp Configuration\n>\n>Server Configuration","wordCount":65,"type":"Content"},{"name":"Manual Install","description":"install the code manually","path":"/docs/installation/appInstall/manualInstall","text":"Manual Code Installation\nSmartApp (Install)\nStep 1:\n> Log-in to the SmartThings IDE at ST IDE\n>  * Once you log-in ensure you are able to see your hub and devices under the Locations tab.\n>  * *These instruction assume that you have already registered an account on the SmartThings IDE website.\n>  Otherwise, please create the account before proceeding any further.*\n>\n>\nStep 2:\n> Navigate to the SmartApps Section of the SmartThings IDE by clicking My SmartApps tab at the top of your screen:\n>\n>\nStep 3:\n> Create a new smartapp by clicking on the  button found in the top right corner of this page:\n>\n>\nStep 4:\n> Click on the  button found at the top of the screen:\n>\n>\nStep 5:\n> You will now be at this page:\n>\n>\nStep 6:\n> Copy the Echo Speaks source code from this link: SmartApp Code\n>  + Press CTRL+A to Select all text and CTRL+C to Copy the selected text.\n>  + Now paste it into the large white box on your screen with CTRL+V.\n>  + Scroll to the bottom of the page and click on the Create button.\n>\n>\nStep 7:\n> You will now see the screen below:\n>\n>\n> * Click on the Save button.\n> * After a few seconds click on the Publish button, and then click the For Me button.\n>\n>\nStep 8:\n> You will now enable the SmartApps OAuth configuration. Please click on the 'App Settings' button and scroll to the bottom of the next screen.\n>\n>\nStep 9:\n> Click on the OAuth tab and then click the Enable OAuth in Smart App button as seen below:\n>\n>\nStep 10:\n> Finally, click on Update. Once this is complete you are done with the IDE Smart app install. Continue on for the Device Handler install instructions.\n>\n>\nDevice Handler (Install)\nStep 1:\n> Log into the IDE and click on the 'My Device Handlers' tab followed by the 'Create New Device Handler' and finally the 'From Code' tab.\n>\n>\n>\n>\n>\n>\nStep 2:\n> Click on this link: Device Handler Code to obtain the Device Handler code.\n>\n>  + Press CTRL+A to Select all text and CTRL+C to Copy the selected text.\n> + Now paste it into the large white box on your screen with CTRL+V.\n> + Scroll to the bottom of the page and click on the Create button.\n>\nStep 3:\n> * Scroll to the top of the screen and click the 'Save' button.\n>\n>\n> * Click on by the 'Publish' button and then 'For Me'.\n>","wordCount":115,"type":"Content"},{"name":"Configure SmartApp/Server","description":"configure the smartapp and server installation","path":"/docs/installation/configuration","text":"","wordCount":0,"type":"TOC"},{"name":"SmartApp Configuration","description":"SmartApp setup","path":"/docs/installation/configuration/appConfig","text":"SmartApp Configuration\nStep 1:\n>On your mobile device, open the SmartThings Classic App.\nTap on the 'Automation' tab.\n>\n>\nStep 2:\n>Scroll to the bottom of the screen and tap on '+ Add a SmartApp'\n>\n>\nStep 3:\n> Scroll to the bottom of the screen again and tap on '+ My Apps'.\n>\n>\nStep 4:\n> Scroll until you find 'Echo Speaks' and tap on it to start the install process.\n>\n>\nStep 5:\n>You will now be in the main screen of the Echo Speaks SmartApp.\n>* If you have Fire Tablets that you wish to use please activate the 'Create Devices for Tablets' toggle.\n>* Next, tap on the 'Next' in the top right corner of the screen.\n>\n>\nStep 6:\n> Tap on the 'Select Local Hub' at the bottom of the screen and select your SmartThings Hub that you will be using for this install.\n>\n>\nStep 7:\n> The screen will change to what is shown below.\n> * Activate the toggle at the top to signify that you will be Heroku server service.\n> * If you have not already created a free Heroku app, you will need to follow the prompts to create it.\n>\nStep 8:\n>Now tap on 'Save' in the top right corner. This will close the app. You will need to go into the Automation tab of the SmartThings mobile app and select Echo Speaks to finish the install.\n>\n>\n>\n>Tap on the 'Login Service Settings' block.\n>\n>\nStep 9:\n>Continue Server Config Here:\n>\n>Server Configuration","wordCount":30,"type":"Content"},{"name":"Heroku Configuration","description":"Heroku server setup","path":"/docs/installation/configuration/serverConfig","text":"Server Configuration\nStep 1:\n>Ensure your Amazon domain is correct (green box) and then tap on the 'Begin Heroku Setup' shown in the red box below.`\n>\n>\nStep 2:\n>A browser window should open that looks like the one below.\nHighlight and copy the information in the gray box for later use. Now tap on the 'Deploy to Heroku' button.\n>\n>\n>\n>\nStep 3:\n>You will paste the information from the previous step into the box named 'App Name' `\n>\n>\n>See the green box below. Your information is going to show that the app name is not available. YOU MUST FOLLOW THE NEXT STEP EXACTLY AS WRITTEN\n>\nStep 4:\n>THIS MUST BE DONE PRECISELY. FAILURE TO FOLLOW THIS STEP MAY RESULT IN YOUR APP NOT OPERATING PROPERLY\n> * Please tap on the app name you pasted to open your keyboard on your screen, and then tap the space bar.\n> * Now tap the back button to delete that space that you just typed in. You MUST remove the space.`\\\n> It should now turn green as pictured below:\n>\nStep 5:\n>Now, scroll to the bottom of the screen and tap on the 'Deploy App' button. You will now see the information below as the app is being deployed.\n>Think of the below picture as a movie.... the words will change\n>\n>\nStep 6:\n>Once the screen looks like the one below (It generally only takes a minute or two after starting the above).\n> * Tap on the 'Manage App' button.\n>\n> * Now tap on the 'Open app' button at the top of the page.\n>\n> * That will open this page shown below.\n>\nStep 7:\n>At this point, you need to get your cookie:\n>Tap on the 'Go to Login Page' button as shown below.\n>\nStep 8:\n>Input your CORRECT login information for the Amazon account that your devices are registered with, then tap on 'Sign In'.\n>\n>\n> When the above part is done successfully, you will see the screen below.\n>\n>\nStep 9:\n>At this point, close the browser window and go back into the SmartThings mobile app.\n>* Open the Echo Speaks SmartApp and press 'Save' then wait a couple of minutes.\n>* Your app needs to communicate with Amazon and this can sometimes take about 1 minute.\n>\n> After 1 minute you can open the Echo Speaks App and you should see your Discovered Devices section populated.\n>\nStep 10:\n>Once you see your devices scroll down and tap on the 'Broadcast Test Page'\n>\n>\nStep 11:\n>Select the devices to test and activate the 'Perform the Broadcast' toggle.\n>* This will send a test text to speech command to selected devices.\n>* If you hear the broadcast on your echo devices, then good.\n>* If not, call Houston cause you have a problem.\n>\n>\nYou're Done\nOnce you have completed these steps you are done.\nYou can now use the devices in any of your supported SmartThings automation's.\nCongratulations!!","wordCount":85,"type":"Content"},{"name":"Device Support","description":"models supported and their attributes, commands.","path":"/docs/devices","text":"","wordCount":0,"type":"TOC"},{"name":"Supported Devices","description":"Confirm devices supported","path":"/docs/devices/devicesSupported","text":"Devices tested to work with Echo Speaks TTS\n\n| Official Echo Devices |\n|:-------------------------------------|\n| Echo Show (Gen 1, 2)                 |\n| Echo Dot (Gen 1, 2, 3)               |\n| Echo (Gen 1, 2)                      |\n| Echo Plus (Gen 1, 2)                 |\n| Echo Spot                            |\n| Echo Tap                             |\n| Fire TV (Gen 1, 2, 3)                |\n| Fire TV Stick (Gen 1, 2, 3)          |\n| Fire TV Cube                         |\n| Kindle Fire Tablets (HD Fire Models) |\n\n| Other Devices with Alexa |\n|:------------------------------|\n| Ecobee 4                      |\n| One-Link Safe and Sound       |\n\nNotice\n  There are a lot of devices out there that have Alexa integrated which may or may not display in the Echo Speaks app.\n  We are attempting to make a way to better identify supported devices.\n  In the mean time I will update this list as often as I can.\n\nIs your Device Incorrectly Identified?\n\n Please submit an issue here: https://github.com/tonesto7/echo-speaks/issues\n   > Provide the following info in the issue:\n   >* DeviceType id (eg. A38949IHXHRQ5P)\n   >* Model Name Description\n   >* Generation of the device\n","wordCount":109,"type":"Content"},{"name":"Device Attributes","description":"All of the device attributes that are available","path":"/docs/devices/deviceAttributes","text":"Custom Attributes and Example Values\nIn this section, this we review device attributes and some basic example values.\nlastUpdated: (String)\n>Example Value: Dec 3, 2018 - 12:47:43 PM\ndeviceStatus: (String)\n>Example Value: playingechospot_gen1\ndeviceType: (String)\n>Example Value: A10A33FOX2NUBK\ndeviceStyle: (String)\n>Example Value: Echo Spot\ndoNotDisturb: (String)\n>Example Value: false\nfirmwareVer: (String)\n>Example Value: 625533420\nonlineStatus: (String)\n>Example Value: online\ncurrentStation: (String)\n>Example Value: Holiday Favorites Station\ncurrentAlbum: (String)\n>Example Value: Dean Martin\nlastSpeakCmd: (String)\n>Example Value: The Front Door Lock is unlocked\nlastCmdSentDt: (String)\n>Example Value: Mon Dec 03 09:16:09 EST 2018\ntrackImage: (String)\n>Example Value: ``\nalarmVolume: (Number)\n>Example Value: 47\nalexaWakeWord: (String)\n>Example Value: ALEXA\nwakeWords: (Enum)\n>Example Value: [\"ALEXA\",\"AMAZON\",\"ECHO\",\"COMPUTER\"]\nalexaPlaylists: (JSON_Object)\n>Example Value: []\nalexaNotifications: (JSON_Object)\n>Example Value:\n>{\\\n   \"Home Audio\": [\\\n      {\\\n          \"title\": \"Home Audio\",\\\n          \"playlistId\": \"a1553cd7-f732-4f7e-ac3c-995b94860e57\",\\\n          \"entryList\": null,\\\n          \"version\": \"1\",\\\n          \"trackCount\": 0\\\n      }\\\n   ]\\\n}\nalexaMusicProviders: (JSON_Object)\n>Example Value:\n>[\\\n  CLOUDPLAYER: My Library,\\\n  AMAZON_MUSIC: Amazon Music,\\\n  IHEARTRADIO: iHeartRadio,\\\n  PANDORA: Pandora,\\\n  TUNEIN: TuneIn\\\n]\nvolumeSupported: (Boolean)\n>Example Value: true\nttsSupported: (Boolean)\n>Example Value: true\nmusicSupported: (Boolean)\n>Example Value: true\nalarmSupported: (Boolean)\n>Example Value: true\nreminderSupported: (Boolean)\n>Example Value: true","wordCount":109,"type":"Content"},{"name":"Device Commands","description":"All of the device commands that are available","path":"/docs/devices/deviceCommands","text":"","wordCount":0,"type":"TOC"},{"name":"Actions","description":"action command descriptions","path":"/docs/devices/deviceCommands/actionCommands","text":"Action Commands\n\ndoNotDisturbOn()\n\nDescription:\nActivates Do Not Disturb for the device\n\nParameters\nNone Accepted\n\ndoNotDisturbOff()\n\nDescription:\nDisables Do Not Disturb for the device\n\nParameters\nNone Accepted\n\nsetWakeWord(\"ECHO\")\n\nDescription:\nUsed to change the alexa wake word invocation name\n\nParameters\nWakeWord (String): You can use one of the following: [\"ALEXA\", \"AMAZON\", \"ECHO\", \"COMPUTER\"]\n\nExample Usage: setWakeWord(\"ECHO\")\n","wordCount":36,"type":"Content"},{"name":"Alarm & Reminders","description":"alert command descriptions","path":"/docs/devices/deviceCommands/alertsCommands","text":"Alarm and Reminder Commands\ncreateAlarm(Label, Date, Time)\nDescription:\nNOTE:Not all alexa devices support this feature\nThis will create audible alarms for a specific device.\nRequired Parameters\nLabel (String): Label to identify the alarm in the Alexa App\nDate (String): This must be in this format (Year-Month-Day)\nTime (String): This must be in this 24-hour time format (HH:MM)\nExample: createAlarm(\"Alarm Label\", \"2019-01-03\", \"18:10\")\ncreateReminder(Reminder_Message, Date, Time)\nDescription:\nNOTE:Not all alexa devices support this feature\nThis will create audible Reminder and read back the label as the reminder message.\nRequired Parameters\nReminder Message (String): Reminder message that is spoken back\nDate (String): This must be in this format (Year-Month-Day)\nTime (String): This must be in this 24-hour time format (HH:MM)\nExample: createReminder(\"Take out the trash\", \"2019-01-03\", \"18:10\")","wordCount":67,"type":"Content"},{"name":"Music","description":"music command descriptions","path":"/docs/devices/deviceCommands/musicCommands","text":"Music Commands\n\nsearchMusic(String searchPhrase, String providerId, volume=null, sleepSeconds=null)\n\nUsed to play music from the desired music provider\nThe available providerId\\'s are \\[CLOUDPLAYER, AMAZON\\MUSIC, I\\HEART\\_RADIO, PANDORA, SPOTIFY, TUNEIN\\]\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * ProviderId (String): \"AMAZON_MUSIC\"\\\n * Volume (Integer): 30\n\nExample Usage: searchMusic(\\\"thriller\\\", \\\"AMAZON\\_MUSIC\\\", 30)\n\nsearchAmazonMusic(\"searchstringhere\")\n\nUsed to search and play music from Amazon Music\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * Volume (Integer): 30\n\nExample Usage: searchAmazonMusic(\\\"thriller\\\", 30)\n\nsearchAppleMusic(\"searchstringhere\")\n\nUsed to search and play music from Amazon Music\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * Volume (Integer): 30\n\nExample Usage: searchAppleMusic(\\\"thriller\\\", 30)\n\nsearchPandora(\"searchstringhere\")\n\nUsed to search and play music from Pandora Music\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * Volume (Integer): 30\n\nExample Usage: searchPandora(\\\"thriller\\\", 30)\n\nsearchIheart(\"searchstringhere\")\n\nUsed to search and play music from iHeartRadio\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * Volume (Integer): 30\n\nExample Usage: searchIheart(\\\"thriller\\\", 30)\n\nsearchSiriusXm(\"searchstringhere\")\n\nUsed to search and play from Sirius XM Radio\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * Volume (Integer): 30\n\nExample Usage: searchSiriusXm(\\\"thriller\\\", 30)\n\nsearchSpotify(\"searchstringhere\")\n\nUsed to search and play music from Spotify Music\nAccepted Parameters:\n\n * SearchPhrase (String): \"thriller\"\\\n * Volume (Integer): 30\n\nExample Usage: searchSpotify(\\\"thriller\\\", 30)\n\nsearchTuneIn(\"searchstringhere\")\n\nUsed to search and play music from TuneIn Radio\nAccepted Parameters:\n\n * SearchPhrase (String): \"WNIC\"\\\n * Volume (Integer): 30\n\nExample Usage: searchPandora(\\\"WNIC\\\")\n","wordCount":111,"type":"Content"},{"name":"Speech","description":"speech command descriptions","path":"/docs/devices/deviceCommands/speechCommands","text":"Speech Commands\nreplayText()\nDescription:\nWill replay the last text sent to the device.\nParameters\nNone Accepted\nsetVolumeAndSpeak(volume, message)\nDescription:\nNOTICE:This command is highly recommend in place of sending an individual command for both volume and speaking.\nWhen used it is set to Amazon as a single command and executed in a sequence\nParameters\nVolume (Integer): Between 0-100\nMessage (String): String between 1-400 characters in length\nExample Usage: setVolumeAndSpeak(47, \"The Front door is unlocked\")\nsetVolumeSpeakAndRestore(volume, message)\nDescription:\nNOTICE:This command is highly recommended in place of sending individual commands for setVolume(47), speak(\"The Front door is unlocked\"), and setVolume(30).\nWhen used it is set to Amazon as a single command and executed in a sequence\nWhen the command is called it captures the current volume and restores immediately after the message is played.\nParameters\nVolume (Integer): Between 0-100\nMessage (String): String between 1-400 characters in length\nRestore Volume (Integer): Between 0-100\nExample Usage: setVolumeSpeakAndRestore(50, \"The Front door is unlocked\", 30)\nsetAlarmVolume(value)\nDescription:\nNOTE:Only available on device that support alarms and reminders\nSets the Echo Devices Alarm and Reminder Notification volume\nParameters\nVolume (Integer): Between 0-100\nExample: setAlarmVolume(40)\nplayWeather()\nDescription:\nAlexa will give the current weather conditions\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playWeather()\nOptional: playWeather(30, 50)\nplaySingASong()\nDescription:\nAlexa will sing a random song\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playSingASong()\nOptional: playSingASong(30, 50)\nplayFlashBrief()\nDescription:\nAlexa will play the your flash briefing (If device supports it)\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playFlashBrief()\nOptional: playFlashBrief(30, 50)\nplayGoodMorning()\nDescription:\nAlexa will play the your good morning run down\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playGoodMorning()\nOptional: playGoodMorning(30, 50)\nplayGoodNight()\nDescription:\nAlexa will say a random good night message\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playGoodNight()\nOptional: playGoodNight(30, 50)\nplayWelcomeHome()\nDescription:\nAlexa will say a random welcome home message\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playWelcomeHome()\nOptional: playWelcomeHome(30, 50)\nplayTraffic()\nDescription:\nAlexa will give the current traffic condition on your way to work\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playTraffic()\nOptional: playTraffic(30, 50)\nplayTellStory()\nDescription:\nAlexa will tell a random story\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playTellStory()\nOptional: playTellStory(30, 50)\nplayFunFact()\nDescription:\nAlexa will tell a random fun fact\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playFunFact()\nOptional: playFunFact(30, 50)\nplayJoke()\nDescription:\nAlexa will tell a random joke\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playJoke()\nOptional: playJoke(30, 50)\nplayCalendarToday()\nDescription:\nNOTE:Only available when you connected calendar accounts to your amazon alexa account\nAlexa will read all of the calendar events for the day\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playCalendarToday()\nOptional: playCalendarToday(30, 50)\nplayCalendarTomorrow()\nDescription:\nNOTE:Only available when you connected calendar accounts to your amazon alexa account\nAlexa will read all of the calendar events for tomorrow\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playCalendarTomorrow()\nOptional: playCalendarTomorrow(30, 50)\nplayCalendarNext()\nDescription:\nNOTE:Only available when you connected calendar accounts to your amazon alexa account\nAlexa will read the next calendar event\nOptional Parameters\nVolume (Integer): Between 0-100\nRestore Volume (Integer): Between 0-100\nExample: playCalendarNext()\nOptional: playCalendarNext(30, 50)\nplayAnnouncement(message)\nDescription:\nThis will make an announcement with the message on the device executing the command\nOptional Parameters\nMessage (String): String between 1-400 characters in length\nExample: playAnnouncement(\"the garage door has opened\")\nplayAnnouncementAll(message)\nDescription:\nThis will make an announcement with the message on all echo devices on your account\nParameters\nMessage (String): String between 1-400 characters in length\nExample: playAnnouncementAll(\"the garage door has opened\")","wordCount":404,"type":"Content"},{"name":"Troubleshooting","description":"help with common issues.","path":"/docs/troubleshoot","text":"","wordCount":0,"type":"TOC"},{"name":"Common Errors","description":"solutions to common issues","path":"/docs/troubleshoot/commonErrors","text":"Troubleshooting\n Sometimes you may receive an error message. Hopefully it is one of the below and we already have a fix for you!`\n\nStatus Code 400/401\n\nThis failure is almost always due to the expiration of your cookie.  Simply clear the log in information for the Heroku App and log back in to Amazon. This should fix your issue right away.\n\nSteps to Fix\n\nLog into the https://dashboard.heroku.com website and click on your echo-speaks-xxxxxxx app.\nThen click on the Settings.\nScroll down to the Domains and Certificates section (pictured below).\nClick on the link listed next to Domain.\n   This will take you to the Amazon Cookie Retrieval and should look like the second picture below.\nClick on Orange Clear Login Info button to reset login info.\n\nStatus Code 404\n\nFailed with status code 404 @line 890 (asyncCommandHandler\n\n  The Heroku service will put an app to sleep once it detects no activity for 30 minutes.\nThe Echo Speaks system has a \"Heart Beat\" that talks to Heroku to keep the app awake. We are dealing with the cloud here, so sometimes there may be a delay in the Heart Beat, resulting in a nap for your server.\n\nSteps to Fix\n\nTo remedy this it is helpful to open the Web Config page, which normally wakes the service up.  Sometimes this may take a couple of minutes.\nYou can easily navigate to this page by following these steps. We recommend that you create a link to the page in case of any future incidents, then it will be a simple one click fix.\n\nLog into the Heroku.com website and click on your app. Then click on Settings and scroll down to the Domains and Certificates section (pictured below).\nClick on the link listed next to Domain.\n   This will take you to the Amazon Cookie Retrieval and should look like the second picture below. You should then be good to go.\n   If it wants you to log in again, then just do it and you should then be good.\n\n--\n\n/ap/cvf Request Error\n\n/ap/cvf/request error\nIf you see this error when you are attempting to do the Amazon Login part of the server deployment, We have found this to be due to having had the Amazon 2FA (2 Step Verfication) service activated, and then later turned off.\nUnfortunately, once you have had this service turned on, it will have to be on for Echo Speaks to work properly. You may or may not remember ever having it turned on in the past, but with the presence of this error, it is very possible. To remedy this error you will need to turn the 2FA service back on and redeploy the server.\n","wordCount":46,"type":"Content"},{"name":"Remove Server","description":"heroku server removal","path":"/docs/troubleshoot/removeServer","text":"Heroku Server Removal\n\nThere may come a time when you need to reset your Heroku server service. Follow these steps precisely to do it:\n\nStep 1:\n> Logon to the dashboard.heroku.com site. You should see this screen that lists your Echo Speaks App, click on the app.\n\nStep 2:\n> Click on the Settings button like you see in the green box below:\n\nStep 3:\n> Scroll to the very bottom of the page and click on Delete App\n\nStep 4:\n> Copy and paste the name of the app into the block and click on Delete. Now close this screen and go back to your mobile app.\n\nStep 5:\n> Open the Echo Speaks smartapp and click on the Echo Service Settings.\n\nStep 6:\n> At the bottom, you will see the 'Reset Service Data'. Toggle that switch and wait until you see this screen:\n\nStep 7:\n> Open the Echo Speaks smartapp and click on the Echo Service Settings.\n\nStep 8:\n> At the bottom, you will see the +Service Preferences, Once expanded Toggle the 'Reset Service Data' and wait until you see this screen:\n","wordCount":27,"type":"Content"},{"name":"Redeploy Server","description":"redeploy heroku server","path":"/docs/troubleshoot/redeployServer","text":"Redeploy Heroku Server\nRedeploying the Echo Speaks server is a very simple process. Just follow these steps.\nFYI it will take you longer to read these instruction than to actually redeploy the server!\nStep 1:\n> Logon to the dashboard.heroku.com site. You should see this screen that lists your Echo Speaks App, click on the app.\nStep 2:\n> Click on the Settings button like you see in the green box below:\nStep 3:\n> Scroll to the very bottom of the page and click on Delete App\nStep 4:\n> Copy and paste the name of the app into the block and click on Delete. Now close this screen and go back to your mobile app.\nStep 5:\n> Open the Echo Speaks SmartApp and click on the Echo Service Settings.\nStep 6:\n> At the bottom, you will see the 'Reset Service Data'. Toggle that switch and wait until you see this screen:\nStep 7:\n> Open the Echo Speaks SmartApp and click on the Echo Service Settings.\nStep 8:\n> At the bottom, you will see the +Service Preferences, Once expanded Toggle the 'Reset Service Data' and wait until you see this screen:\nStep 9:\n> Now that you have deleted the Echo Speaks server and reset the SmartApp, follow this link below to redeploy your service.\n>\n>Server Configuration","wordCount":35,"type":"Content"},{"name":"FAQs","description":"frequently asked questions are covered here","path":"/docs/faq","text":"This content is refreshed as new features and functions are introduced, or existing functions evolve.  Check back often!\n\nWhat if I have more than one Amazon Account\nHow to write a document in Markdown?\n\nMarkdown Tutorial?\n\n   Checkout the Markdown Cheat Sheet https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\n\nWhat if I have more than one Amazon Account?\n\n  If you have multiple Amazon accounts with devices on each one, maybe the one in your home and the one in your parents home, you can simply perform a second complete install of the app and Heroku server. This will allow you to find all of your devices and they can be used in your SmartThings automations.\n","wordCount":50,"type":"Content"},{"name":"Donate","description":"want to donate for all of the work involved","path":"/docs/donate","text":"Donations\nThe development of these integrations takes a lot of time and effort and while donations will never be required they are always very much appreciated.\n\nDirect Link\n","wordCount":26,"type":"Content"},{"name":"Whats new?","description":"recent announcements, news, latest and greatest","path":"/docs/whatsNew","text":"New Items will eventually be added here.... TBD\n","wordCount":8,"type":"Content"}]